<?php

class drivers_model extends CI_Model
{
    public function get_drivers($person_id)
    {
        //SELECT * FROM `properties` left join drivers on properties.`prop_link_id` = drivers.driving_id WHERE `person_id` = 3 AND `prop_link_type` = 'driving'
        $this->db->join('drivers', 'properties.`prop_link_id` = drivers.driving_id');
        $this->db->where('properties.person_id', $person_id);
        $this->db->where('properties.prop_link_type', 'driving');
        $query = $this->db->get('properties');
        return $query->result();
    }

    public function get_license_types()
    {
        $this->db->select('driving_id,drivers_license_type');
        $this->db->from('drivers');
        $query = $this->db->get();
        return $query->result();
    }

    public function exclude_items($person_id)
    {
        $excluding_items = $this->get_drivers($person_id);
        $exclude_array = [];
        foreach ($excluding_items as $item) {
            $exclude_array[] = $item->driving_id;
        }

        $this->db->select('driving_id,drivers_license_type');
        if($exclude_array) {
            $this->db->where_not_in('driving_id',$exclude_array);
        }
        $this->db->order_by('driving_id');
        $query = $this->db->get('drivers');
        return $query->result();

    }


    public function get_link($data)
    {
        //SELECT * FROM `properties` WHERE `person_id` = 3 AND `prop_link_id` = 2 AND `prop_link_type` = 'driving'
        $this->db->where($data);
        $query = $this->db->get('properties');
        return $query->result();

    }

    public function add($item_data)
    {
        //avoid error - set driving_years to null if none is submitted
        if($item_data['driving_years']== '') {
            $item_data['driving_years'] = 0;
        }

        //check if exists
        //SELECT * FROM `properties` WHERE `person_id` = 3 AND `prop_link_id` = 2 AND `prop_link_type` = 'driving'
        $data = [
            'person_id' => $item_data['person_id'],
            'prop_link_id' => $item_data['prop_link_id'],
            'prop_link_type' => 'driving',
        ];
        if ($this->get_link($data)) {
            //data is a duplicate
            return false;
        }

        //INSERT INTO `properties` (`person_id`, `prop_link_id`, `prop_link_type`, `driving_years`) VALUES ('3', '2', 'driving', '20');
        $data = [
            'person_id' => $item_data['person_id'],
            'prop_link_id' => $item_data['prop_link_id'],
            'prop_link_type' => 'driving',
            'driving_years' => $item_data['driving_years'],
        ];

        if ($this->db->insert('properties', $data)) {
            return true;
        } else {
            return false;
        }
    }

    public function check_type_exists($driving_id)
    {
        $this->db->select('driving_id');
        $this->db->from('drivers');
        $this->db->where('driving_id', $driving_id);
        $query = $this->db->get();
        return $query->result();
    }
    public function delete_link_by_id($link_id)
    {
        $this->db->where('prop_id', $link_id);
        if (!$this->db->delete('properties')) {
            return false;
        } else {
            return true;
        }
    }
}
