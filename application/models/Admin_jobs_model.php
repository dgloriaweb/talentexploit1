<?php

class Admin_jobs_model extends CI_Model
{
    public function get_jobs()
    {
        $this->db->order_by('job_name');
        $query = $this->db->get('jobs');
        return $query->result();
    }

    public function get_job_by_id($job_id)
    {
        $this->db->where('jobs.job_id', $job_id);
        $query = $this->db->get('jobs');
        return $query->result();
    }

    public function update_job_preferences($job_id, $querydata)
    {
        $this->db->set('remote', $querydata['remote']);
        $this->db->set('overtime', $querydata['overtime']);
        $this->db->set('nightshift', $querydata['nightshift']);
        $this->db->set('other_shift', $querydata['other_shift']);
        $this->db->set('weekdays', $querydata['weekdays']);
        $this->db->set('saturday', $querydata['saturday']);
        $this->db->set('sunday', $querydata['sunday']);
        $this->db->set('bank_holidays', $querydata['bank_holidays']);
        $this->db->where('jobs.job_id', $job_id);
        if ($this->db->update('jobs')) {
            return true;
        } else {
            return false;
        }

    }

    public function add_keyword($job_id, $keyword_add)
    {
        //if keyword doesn't exist in the array, then add
        $job_data = $this->get_job_by_id($job_id);
        $keyword_array = explode(',', $job_data[0]->keywords);
        $new_keywords= trim($job_data[0]->keywords);
        if (!in_array($keyword_add, $keyword_array, false)) {
            //if you already have a comma, skip it
            if(substr($new_keywords, -1)!=','){
                $new_keywords .= ',';
            }
            $new_keywords .= $keyword_add;
            $this->db->set('keywords', $new_keywords);
            $this->db->where('jobs.job_id', $job_id);
            if ($this->db->update('jobs')) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }
}
