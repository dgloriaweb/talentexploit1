<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Detail_skills extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        if (!$this->session->userdata('logged_in') && $this->uri->segment(1, '') !== 'register' && $this->uri->segment(2, '') !== 'store_user') {
            redirect('login');
        }
    }

    public function add()
    {
        $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
        $data['title'] = 'Add skills';
        $person_id = $this->session->userdata('person_id');
        $this->form_validation->set_rules('skill_selection', 'skill_selection', 'required|callback_check_skill_exists');
        
        if ($this->form_validation->run()) {
            $new_property = [
                'person_id' => $person_id,
                'prop_link_id' => $this->input->post('skill_selection'), 
                'prop_link_type' => 'skill'
    
            ];
             if (!$this->properties_model->add($new_property)) {
                //set message
                $this->session->set_flashdata('skill_not_added', 'New skill NOT added');
                redirect('persons/skills');
            } else {
                //set message
                $this->session->set_flashdata('skill_added', 'New skill added');
                redirect('persons/skills');
            }
        } else {
            $this->load->view('detail_skills_view', $data);
        }
    }
   /**
     * validate select dropdown received value
     *
     * @return void
     */
    public function check_skill_exists()
    {
        $this->form_validation->set_message('check_skill_exists', 'That skill doesn\'t exist, please choose from the list.');
        if ($this->global_model->check_type_exists($this->input->post('skill_selection'),'skill_id','skills')) {
            return true;
        } else {
            return false;
        }
    }

}