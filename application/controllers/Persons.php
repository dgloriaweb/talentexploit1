<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Persons extends CI_Controller
{

    public function index()
    {
        $data['title'] = 'Welcome';
        //if user is logged in, load their data
        //reset all properties to default
        if ($this->session->userdata('logged_in')) {
            $data['properties'][0] = [
                'username' => $this->session->userdata('username'),
                'citizen_id' => '',
                'hours_id' => '',
                'sector_id' => '',
                'construction_id' => '',
                'language_id' => '',
                'driving_id' => '',
                'target_country_id' => '',
                'skill_id' => '',
            ];
            //check if we have any results at all
            $properties = $this->person_model->get_person_properties($this->session->userdata('username'));
            if ($properties) {
                $data['properties'] = $properties;
            } else {
                // echo '<pre>'; var_dump( $data['properties']); echo '</pre>'; die;
                //there is no data for this user
            }
        }

        $this->load->view('home_view', $data);
    }

    /**
     * Register new user
     *
     * @return void
     */
    public function register()
    {

        $data['title'] = 'Sign Up';
        $this->form_validation->set_rules('username', 'Username', 'required|min_length[5]|callback_check_username_exists');
        $this->form_validation->set_rules('password', 'Password', 'required|min_length[8]');
        $this->form_validation->set_rules('password2', 'Confirm Password', 'required|min_length[8]|matches[password]');

        if ($this->form_validation->run()) {
            $enc_password = password_hash($this->input->post('password'), PASSWORD_BCRYPT, ['cost' => 11]);
            $this->person_model->register($enc_password);

            //set message
            $this->session->set_flashdata('user_registered', 'You are now registered and can log in');

            redirect('persons');

        } else {
            $this->load->view('register_view', $data);
        }
    }

    /**
     * log in with existing user
     *
     * @return void
     */
    public function login()
    {
        $data['title'] = 'Log In';
        $this->form_validation->set_rules('username', 'Username', 'required');
        $this->form_validation->set_rules('password', 'Password', 'required');
        if ($this->form_validation->run()) {
            $password = htmlentities($this->input->post('password'));
            $username = htmlentities($this->input->post('username'));
            $dbpassword = $this->person_model->login($username);
            if ($dbpassword) {
                //if we get result, assert password hash
                if (password_verify($password, $dbpassword)) {
                    //create session
                    $user_data = [
                        'username' => $username,
                        'logged_in' => true,
                    ];
                    $this->session->set_userdata($user_data);
                    //show message
                    $this->session->set_flashdata('user_logged_in', 'You are now logged in');
                    redirect('persons');
                } else {
                    //password doesn't match
                    $this->session->set_flashdata('login_failed', 'password doesn\'t match');
                    redirect('login');
                }
            } else {
                //username not found in database
                $this->session->set_flashdata('login_failed', 'username doesn\'t exist');
                redirect('login');
            }
        } else {
            $this->load->view('login_view', $data);
        }
    }

    /**
     * check_username_exists
     *
     * @param string $username
     * @return bool
     */
    public function check_username_exists($username)
    {
        $this->form_validation->set_message('check_username_exists', 'That username is already taken. Please choose a different one');
        if ($this->person_model->check_username_exists($username)) {

            return true;
        } else {
            return false;
        }
    }

    /**
     * logout
     *
     * @return void
     */
    public function logout()
    {
        $user_data = [
            'username',
            'logged_in',
        ];
        $this->session->unset_userdata($user_data);
        $this->session->sess_destroy();
        redirect('persons');
    }

    /**
     * add user specific details that is going also into persons table
     *
     * @return void
     */
    public function details()
    {
        # code...
    }
}
