<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Persons extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        if (!$this->session->userdata('logged_in') && $this->uri->segment(1, '') !== 'register' && $this->uri->segment(2, '') !== 'store_user') {
            redirect('login');
        }
    }

    public function index()
    {
        $data['title'] = 'Welcome';
        $data['properties'] = [];
        //if user is logged in, load their data
        //reset all properties to default
        if ($this->session->userdata('logged_in')) {
            $data['properties'] = $this->get_persons_properties();
        }
        $this->load->view('home_view', $data);
    }

    public function register()
    {
        $data['title'] = 'Sign Up';
        $this->load->view('register_view', $data);

    }
    /**
     * Register new user
     *
     * @return void
     */
    public function store_user()
    {
        $this->form_validation->set_error_delimiters('<div class="error">', '</div>');
        $data['title'] = 'Sign Up';
        $this->form_validation->set_rules('username', 'Username', 'required|min_length[5]|callback_check_username_exists');
        $this->form_validation->set_rules('password', 'Password', 'required|min_length[8]');
        $this->form_validation->set_rules('password2', 'Confirm Password', 'required|min_length[8]|matches[password]');

        if ($this->form_validation->run()) {
            //create user in persons table
            $enc_password = password_hash($this->input->post('password'), PASSWORD_BCRYPT, ['cost' => 11]);
            //returns the last id
            $new_person_id = $this->person_model->register($enc_password);

            //create user in person_links table
            $this->person_links_model->register($new_person_id);

            //set message
            $this->session->set_flashdata('user_registered', 'You are now registered and can log in');

            redirect('persons');

        } else {
            $this->load->view('register_view', $data);
        }
    }

    /**
     * check_username_exists
     *
     * @param string $username
     * @return bool
     */
    public function check_username_exists($username)
    {
        $this->form_validation->set_message('check_username_exists', 'That username is already taken. Please choose a different one');
        if ($this->person_model->check_username_exists($username)) {

            return true;
        } else {
            return false;
        }
    }

    /**
     * logout
     *
     * @return void
     */
    public function logout()
    {
        $user_data = [
            'username',
            'logged_in',
        ];
        $this->session->unset_userdata($user_data);
        $this->session->sess_destroy();
        redirect('persons');
    }

    /**
     * add user specific details that is going also into persons table
     *
     * @return void
     */
    public function details()
    {
        # code...
    }

    public function drivers_license()
    {
        $person_id = $this->session->userdata('person_id');
        $data['title'] = 'Drivers license';
        $data['person_licenses'] = $this->drivers_model->get_drivers($person_id);
        $data['license_types'] = $this->drivers_model->get_license_types();
        $this->load->view('drivers_view', $data);

    }

    public function get_persons_properties()
    {
        $person_id = $this->session->userdata('person_id');
        //go through the query and build below report:

        // $data = [
        //     'driving' => [
        //         'driving_id' => '2',
        //         'driving_years' => '5',
        //     ],
        //     'citizen' => [
        //         'citizen_id' => '1',
        //     ],
        // ];

        //new code
        $properties = $this->person_model->get_person_properties($person_id);

        if ($properties) {
            //set defaults to empty
            $properties_array = [];

            //loop through the list of this user's properties
            foreach ($properties as $property) {
                //define link id
                $link_id = $property->prop_link_id;
                $link_type = $property->prop_link_type;
                $langlevel_id = $property->langlevel_id;
                //test
               
                if ($link_type == 'lang') {
                    $properties_array[] = [
                        'lang' => [
                            'lang_id' => $link_id,
                            'lang_level_id' => $langlevel_id,
                        ],
                    ];
                } else if ($link_type == 'sector') {
                    $properties_array[] = [
                        'sector' => [
                            'sector_id' => $link_id,
                        ],
                    ];

                }
            }
            echo '<pre>';
            var_dump($properties_array);
            echo '</pre>';die;
            return $properties_array;
        }
    }
}
