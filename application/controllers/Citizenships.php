<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Citizenships extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        if (!$this->session->userdata('logged_in') && $this->uri->segment(1, '') !== 'register' && $this->uri->segment(2, '') !== 'store_user') {
            redirect('login');
        }
    }

    public function add()
    {
        $details_join_field = 'properties.prop_link_id';
        $main_join_fields = 'persons.person_id = properties.person_id';
        $where_field = 'properties.prop_link_type';
        $main_join_table = 'properties';
        if ($this->uri->segment(3, 0) == 'desire') {
            $main_join_fields = 'persons.person_id = desired_job_links.person_id';
            $where_field = 'desired_job_links.prop_link_type';
            $details_join_field = 'desired_job_links.prop_link_id';
            $main_join_table = 'desired_job_links';
        }
       $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
        $data['title'] = 'Add citizenship';
        $person_id = $this->session->userdata('person_id');
        $this->form_validation->set_rules('cit_selection', 'cit_selection', 'required|callback_check_citizenship_exists');
        
        if ($this->form_validation->run()) {
            $new_property = [
                'person_id' => $person_id,
                'prop_link_id' => $this->input->post('cit_selection'), 
                'prop_link_type' => 'citizenship'
    
            ];
             if (!$this->properties_model->add($main_join_table,$new_property)) {
                //set message
                $this->session->set_flashdata('citizenship_not_added', 'New citizenship NOT added');
                redirect('persons/citizenships/'.$this->uri->segment(3, 0));
            } else {
                //set message
                $this->session->set_flashdata('citizenship_added', 'New citizenship added');
                redirect('persons/citizenships/'.$this->uri->segment(3, 0));
            }
        } else {
            $this->load->view('citizenships_view', $data);
        }
    }

    /**
     * validate select dropdown received value
     *
     * @return void
     */
    public function check_citizenship_exists()
    {
        $this->form_validation->set_message('check_citizenship_exists', 'That citizenship doesn\'t exist, please choose from the list.');
        if ($this->global_model->check_type_exists($this->input->post('cit_selection'),'citizen_id','citizenships')) {
            return true;
        } else {
            return false;
        }
    }

}