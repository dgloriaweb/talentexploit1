<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Drivers extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        if (!$this->session->userdata('logged_in') && $this->uri->segment(1, '') !== 'register' && $this->uri->segment(2, '') !== 'store_user') {
            redirect('login');
        }
    }

    public function add()
    {
        $this->form_validation->set_error_delimiters('<div class="error">', '</div>');
        $data['title'] = 'Add license';
        $person_id = $this->session->userdata('person_id');
        $data['person_licenses'] = $this->drivers_model->get_drivers($person_id);
        $data['license_types'] = $this->drivers_model->get_license_types();

        $this->form_validation->set_rules('drivers_license_type', 'drivers_license_type', 'required|callback_check_type_exists');
        $this->form_validation->set_rules('driving_years', 'driving_years', 'required|callback_check_number_range');
        if ($this->form_validation->run()) {

            $add_data = [
                'person_id' => $this->session->userdata('person_id'),
                //we have license type, we don't have the id, check if we do, we need the driving_id
                'driving_id' => 1, //get real data here 
                'driving_years' => htmlentities($this->input->post('driving_years')),
            ];


            //this has to be stored in the person_links table
            $this->drivers_model->add($add_data);

            //set message
            $this->session->set_flashdata('license_added', 'New license added');
            redirect('drivers');
        } else {
            //check why validation doesn't work
            $this->load->view('drivers_view', $data);
        }
    }
    public function edit()
    {

    }

    public function check_type_exists()
    {
        $this->form_validation->set_message('check_type_exists', 'That type doesn\'t exist, please choose from the list.');
        if ($this->drivers_model->check_type_exists('drivers_license_type')) {

            return true;
        } else {
            return false;
        }
    }
    public function check_number_range()
    {

        $this->form_validation->set_message('check_number_range', 'Please set years between 1 and 90.');
        if ($this->input->post('driving_years') < 1 && $this->input->post('driving_years') < 90) {

            return true;
        } else {
            return false;
        }
    }
}
