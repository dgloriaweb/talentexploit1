<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Admin_skills extends CI_Controller
{
    //create a place to handle edit and connect skills, core skills, jobs and all that's required
    public function __construct()
    {
        parent::__construct();
        if (!$this->session->userdata('logged_in') && $this->uri->segment(1, '') !== 'register' && $this->uri->segment(2, '') !== 'store_user') {
            redirect('login');
        }
        if (!$this->session->userdata('is_admin')) {
            redirect('login');
        }
    }

    public function index()
    {
        $data['title'] = 'Skills';
        $data['core_skills'] = $this->admin_skills_model->get_core_skills();
        $data['skills'] = $this->admin_skills_model->get_skills();
        $this->load->view('admin_skill_view', $data);
    }

    public function edit_skill()
    {
        //get the skill_id to process the change in the database
        $skill_id = $this->uri->segment(3, 0);
        //show edit skill page
        $data['title'] = 'Edit skill';
        $data['skill_data'] = $this->admin_skills_model->get_skill_by_id($skill_id);
        $this->load->view('admin_skill_edit_view', $data);

    }

    public function add_skill()
    {
        //show add skill page
        $data['title'] = 'Add skill';
        $data['core_skills'] = $this->admin_skills_model->get_core_skills();
        $this->load->view('admin_skill_add_view', $data);

    }

    public function get_skill_data()
    {
        $id = htmlspecialchars($this->input->get('id'));
        $get_skill = $this->admin_skills_model->get_skill_by_id($id);
        echo json_encode($get_skill);
        exit();
    }

    public function update_skill()
    {
        $newskill = htmlspecialchars($this->input->post('skill_input'));
        $skill_id = intval($this->input->post('skill_id'));
        //update database here, use validation!
        //add message about change
        if (!$this->admin_skills_model->update_skill($skill_id, $newskill)) {
            //error
            $this->session->set_flashdata('skill_exists', 'Skill already exists');
            redirect('admin_skills/edit_skill/' . $skill_id);

        } else {
            $this->session->set_flashdata('skill_edited', 'Skill edited successfully');
            redirect('skills');
        }

    }

    public function remove_core_skill_link()
    {
        $core_skill_id = $this->uri->segment(4, 0);
        $skill_id = $this->uri->segment(3, 0);
        //remove link from links table for this skill_id
        if (!$this->admin_skills_model->remove_core_skill_link($skill_id, $core_skill_id)) {
            $this->session->set_flashdata('skill_link_remove_error', 'Skill link remove error');
        } else {
            $this->session->set_flashdata('skill_core_link_removed', 'Skill edited successfully');
        }
        redirect('admin_skills/edit_skill/' . $skill_id);
    }

    public function add_core_skill_link()
    {
        $skill_id = $this->uri->segment(3, 0);
        //make sure no duplicates created
        $selected_core_skill = strtolower(htmlspecialchars($this->input->post('core_skill_selection')));
        //add core skill to skill as link
        if (!$this->admin_skills_model->add_core_skill_link($skill_id, $selected_core_skill)) {
            //not ok
            $this->session->set_flashdata('skill_link_add_error', 'Skill link add error, core skill already exist');
        } else {
            //ok
            $this->session->set_flashdata('skill_core_link_added', 'Skill edited successfully');
        }
        redirect('admin_skills/edit_skill/' . $skill_id);
    }

    public function get_core_skills_for_skill()
    {

        $skill_id = intval($this->input->post('id'));
        //TODO: remove those which are already used
        $non_selected_core_skills = $this->admin_skills_model->exclude_existing_core_skills($skill_id);
        echo json_encode($non_selected_core_skills);
        exit();
    }

    public function store_skill()
    {
        $data['core_skills'] = $this->admin_skills_model->get_core_skills();
        $skill_input = htmlspecialchars($this->input->post('skill_input'));
        $skill_type = htmlspecialchars($this->input->post('skill_type_select'));
        //validate the dropdown to avoid malicious code
        if (!in_array($skill_type, ['job_type', 'personality', 'certificate', 'expectation', 'resources'])) {
            $this->session->set_flashdata('skill_type_add_error', 'Skill type add error, type doesn\'t exist');

        } else {
            $core_skill_select = htmlspecialchars($this->input->post('core_skill_select'));
            //validate select input if selection exists

            if (!$this->admin_skills_model->add_skill($skill_input, $skill_type, $core_skill_select)) {
                //not ok
                $this->session->set_flashdata('admin_skill_add_error', 'Skill NOT added');
            } else {
                //ok
                $this->session->set_flashdata('admin_skill_added', 'Skill added successfully');
            }
        }
        redirect('admin_skills');
    }
}
